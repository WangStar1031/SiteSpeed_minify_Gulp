{"version":3,"sources":["../src/ie8.polyfils.js"],"names":["Array","prototype","forEach","fun","this","TypeError","t","Object","len","length","thisArg","arguments","i","call","Function","bind","oThis","aArgs","slice","fToBind","fNOP","fBound","apply","concat"],"mappings":";;AAOKA,MAAMC,UAAUC,UACnBF,MAAMC,UAAUC,QAAU,SAASC,GACjC,YACA,QAAa,KAATC,MAA4B,OAATA,MAAgC,kBAARD,GAC7C,KAAM,IAAIE,UAMZ,KAAK,GAJDC,GAAIC,OAAOH,MACbI,EAAMF,EAAEG,SAAW,EACnBC,EAAUC,UAAUF,QAAU,EAAIE,UAAU,OAAK,GAE1CC,EAAI,EAAGA,EAAIJ,EAAKI,IAASA,IAAKN,IAAGH,EAAIU,KAAKH,EAASJ,EAAEM,GAAIA,EAAGN,KAIpEQ,SAASb,UAAUc,OACtBD,SAASb,UAAUc,KAAO,SAASC,GACjC,GAAoB,kBAATZ,MAGT,KAAM,IAAIC,WACR,uEAIJ,IAAIY,GAAQjB,MAAMC,UAAUiB,MAAML,KAAKF,UAAW,GAChDQ,EAAUf,KACVgB,EAAO,aACPC,EAAS,WACP,MAAOF,GAAQG,MACblB,eAAgBgB,GAAOhB,KAAOY,EAC9BC,EAAMM,OAAOvB,MAAMC,UAAUiB,MAAML,KAAKF,aAO9C,OAHAS,GAAKnB,UAAYG,KAAKH,UACtBoB,EAAOpB,UAAY,GAAImB,GAEhBC","file":"ie8.polyfils.min.js","sourcesContent":["/*\n * IE8 Polyfils for iframeResizer.js\n *\n * Public domain code - Mozilla Contributors\n * https://developer.mozilla.org/\n */\n\nif (!Array.prototype.forEach) {\n  Array.prototype.forEach = function(fun /*, thisArg */) {\n    'use strict';\n    if (this === void 0 || this === null || typeof fun !== 'function')\n      throw new TypeError();\n\n    var t = Object(this),\n      len = t.length >>> 0,\n      thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n\n    for (var i = 0; i < len; i++) if (i in t) fun.call(thisArg, t[i], i, t);\n  };\n}\n\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError(\n        'Function.prototype.bind - what is trying to be bound is not callable'\n      );\n    }\n\n    var aArgs = Array.prototype.slice.call(arguments, 1),\n      fToBind = this,\n      fNOP = function() {},\n      fBound = function() {\n        return fToBind.apply(\n          this instanceof fNOP ? this : oThis,\n          aArgs.concat(Array.prototype.slice.call(arguments))\n        );\n      };\n\n    fNOP.prototype = this.prototype;\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n"]}