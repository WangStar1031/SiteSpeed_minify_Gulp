<?php echo $header; ?><section class="ordering_options">	<h2 class="top_head"><span class="top_head_text">CHECKOUT</span></h2></section><div class="container">  <?php if ($error_warning) { ?>  <div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> <?php echo $error_warning; ?>    <button type="button" class="close" data-dismiss="alert">&times;</button>  </div>  <?php } ?>  <div class="row" id="content_row" >    <div id="content" class="col-sm-12">				<div id="checkout_options" class="col-lg-6 col-lg-offset-3 checkout-container clearfix">				<div class="checkout-container-header full-width">					<h4>Checkout Options</h4>				</div>				<div id="checkout_checkboxes" class="checkout-container-content">					<?php if(isset($checkoutOption) && $checkoutOption == 1){ //registered only checkout allowed ?>						<div class="col-sm-6 col-xs-6">							<input id="co_sign_in" type="radio" name="checkout_options" value="sign_in" id="co_sign_in"/>							<label for="co_sign_in"><span><span></span></span>Sign In</label>						</div>						<div class="col-sm-6 col-xs-6 no-padding">							<input id="co_register" type="radio" name="checkout_options" value="register" id="co_register"/>							<label for="co_register"><span><span></span></span>Register</label>						</div>					<?php }elseif(isset($checkoutOption) && $checkoutOption == 2){ ?>							<!-- Checkout option is 2, so only guest checkout is allowed, in which case								 the customer always need to go through thr whole checkout form and nothing should be shown here -->						<?php }else{ //both registered and guest checkout allowed ?>						<div class="<?php if($gateway_assign_location == 1){?>col-sm-4 col-xs-4<?php }else{ ?>col-sm-6 col-xs-6<?php }?>">							<input id="co_sign_in" type="radio" name="checkout_options" value="sign_in" id="co_sign_in"/>							<label for="co_sign_in"><span><span></span></span>Sign In</label>						</div>						<div class="<?php if($gateway_assign_location == 1){?>col-sm-4 col-xs-4<?php }else{ ?>col-sm-6 col-xs-6<?php }?> no-padding">							<input id="co_register" type="radio" name="checkout_options" value="register" id="co_register"/>							<label for="co_register"><span><span></span></span>Register</label>						</div>						<?php if($gateway_assign_location == 1){?>						<div class="col-sm-4 col-xs-4">							<input id="co_guest" type="radio" name="checkout_options" value="guest" id="co_guest"/>							<label for="co_guest"><span><span></span></span>Guest</label>						</div>						<?php  }	// end if					 } //end if checkoutOption	?>				</div>				</div>		<div id="registerxx" style="overflow-x: hidden;" class="col-lg-6 col-lg-offset-3 checkout-content-panel bg-white clearfix">  </div>				<div id="custom_checkout_form_content" >  </div>					<div id="selected_checkbox_content" class="col-lg-6 col-lg-offset-3 checkout-content-panel bg-white clearfix"></div>				<div id="checkout_form_content" class="col-lg-6 col-lg-offset-3 checkout-content-panel clearfix" style="display:none;"></div>				<!--<div class="row"  id="register-row">				<div id="contentx" class="col-sm-12">					<div id="registerxx" class="col-lg-6 col-lg-offset-3 checkout-content-panel bg-white clearfix">  </div>				</div>		</div>				<div class="row">			<div class="col-sm-12">					<div id="custom_checkout_form_content" >  </div>				</div>	</div>-->	  </div></div><!--<div id="registerxx" class="col-lg-6 col-lg-offset-3 checkout-content-panel bg-white clearfix">  </div><div id="custom_checkout_form_content" >  </div>	-->    <!--<div class="row"  id="register-row">		<div id="contentx" class="col-sm-12">		<div id="checkout_optionsxx" class="col-lg-12 col-lg-6 col-lg-offset-3 checkout-content-panel bg-white clearfix">			<div id="registerxx">			</div>			</div>		</div>  </div>--><script type="text/javascript"><!--$(document).ready(function() {	var checkoutOption = '<?php if(isset($checkoutOption)){ echo $checkoutOption; } ?>'; 	var logged = '<?php echo $logged; ?>';		if(logged || checkoutOption == 2){		$('#checkout_options').hide();		$.ajax({			url: '<?php echo BASE; ?>index.php?route=checkout/checkout/loadCustomCheckoutForm',			dataType: 'html',			beforeSend: function() {				$('#button-account').button('loading');			},			complete: function() {				$('#button-account').button('reset');			},			success: function(html) {				$('.alert, .text-danger').remove();				$('#selected_checkbox_content').hide();				//$('#checkout_form_content').html(html).show();				$('#content').html(html);							},			error: function(xhr, ajaxOptions, thrownError) {				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);			}		});	}else{		$('#checkout_options').show();		$('input[name=\'checkout_options\'][value=\'sign_in\']').prop('checked', true).trigger('click');	}	});$(document).delegate('input[name=\'checkout_options\']', 'click', function() {		var value = $('input[name=\'checkout_options\']:checked').val();		if(value == 'sign_in'){		$.ajax({				url: '<?php echo BASE; ?>index.php?route=checkout/checkout/loadSignInform',				dataType: 'html',				success: function(html) {					$('#custom-checkout-form').remove();					$('#selected_checkbox_content').html(html).show();					$('#selected_checkbox_content').css("visibility", "");					$('#selected_checkbox_content').css("height", "");					$('#registerxx, #register-row').hide();					// alert(html);				},				error: function(xhr, ajaxOptions, thrownError) {					alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);				}			});	}else if(value == 'register'){		$.ajax({			url: '<?php echo BASE; ?>index.php?route=checkout/checkout/loadRegisterationForm',			dataType: 'html',			beforeSend: function() {				$('#button-register').button('loading');			},			complete: function() {				$('#button-register').button('reset');			},			success: function(html) {				$('#registerxx, #register-row').show();				$('#custom_checkout_form_content').hide();				$('#selected_checkbox_content').css("visibility", "hidden");				$('#selected_checkbox_content').css("height", "0px");				$('#registerxx').html(html);			},			error: function(xhr, ajaxOptions, thrownError) {				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);			}		});			}else{		$.ajax({			url: '<?php echo BASE; ?>index.php?route=checkout/checkout/loadCustomCheckoutForm',			dataType: 'html',			beforeSend: function() {				$('#button-account').button('loading');			},			complete: function() {				$('#button-account').button('reset');			},			success: function(html) {								$('.alert, .text-danger').remove();				// $('#selected_checkbox_content').hide();				//$('#checkout_form_content').html(html).show();				// $('#content').append(html);				//$('#loyalty-point-box').hide();								$('#registerxx, #register-row').hide();				$('#custom_checkout_form_content').show();				$('#selected_checkbox_content').css("visibility", "hidden");				$('#selected_checkbox_content').css("height", "0px");				$('#custom-checkout-form_part_2').css({"height":"400px !important"});				//$('#registerxx').html(html);				$('#custom_checkout_form_content').html(html); 				$('#loyalty-point-box').hide();							},			error: function(xhr, ajaxOptions, thrownError) {				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);			}		});					}});// $(document).ready(function() {	// //$('input[name=\'checkout_options\'][value=\'sign_in\']').prop('checked', true).trigger('click');// });//login$(document).delegate('#button-login', 'click', function() {	$.ajax({			url: '<?php echo BASE; ?>index.php?route=checkout/login/save',			type: 'post',			data: $('#checkout-login-panel :input'),			dataType: 'json',			beforeSend: function() {				$('#button-login').button('loading');			},			complete: function() {				$('#button-login').button('reset');			},			success: function(json) {				$('.alert, .text-danger').remove();				$('.form-group').removeClass('has-error');				if (json['redirect']) {					location = '<?php echo BASE; ?>index.php?route=checkout/checkout';				} else if (json['error']) {					$('#checkout-login-panel').prepend('<div style="color:#cc0000;" class="show_error_message">' + json['error']['warning'] + '</div>');					// Highlight any found errors					$('input[name=\'email\']').parent().addClass('has-error');					$('input[name=\'password\']').parent().addClass('has-error');			   }			},			error: function(xhr, ajaxOptions, thrownError) {				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);			}		});});// Register$(document).delegate('#button-register', 'click', function() {    $.ajax({        url: '<?php echo BASE; ?>index.php?route=checkout/register/save',        type: 'post',        data: $('#checkout-registration-panel input[type=\'text\'], #checkout-registration-panel input[type=\'date\'], #checkout-registration-panel input[type=\'datetime-local\'], #checkout-registration-panel input[type=\'time\'], #checkout-registration-panel input[type=\'password\'], #checkout-registration-panel input[type=\'hidden\'], #checkout-registration-panel input[type=\'checkbox\']:checked, #checkout-registration-panel input[type=\'radio\']:checked, #checkout-registration-panel textarea, #checkout-registration-panel select'),        dataType: 'json',        beforeSend: function() {			$('#button-register').button('loading');		},        complete: function() {            $('#button-register').button('reset');        },        success: function(json) {            $('.alert, .text-danger').remove();            $('.form-group').removeClass('has-error');            if (json['redirect']) {                location = json['redirect'];            } else if (json['error']) {                if (json['error']['warning']) {                    $('#checkout-registration-panel').prepend('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> ' + json['error']['warning'] + '<button type="button" class="close" data-dismiss="alert">&times;</button></div>');                }				for (i in json['error']) {					var element = $('#input-payment-' + i.replace('_', '-'));					if ($(element).parent().hasClass('input-group')) {						$(element).parent().after('<div class="text-danger">' + json['error'][i] + '</div>');					} else {						$(element).after('<div class="text-danger">' + json['error'][i] + '</div>');					}				}				// Highlight any found errors				$('.text-danger').parent().addClass('has-error');            } else {				$('.alert, .text-danger').remove();				location = '<?php echo BASE; ?>index.php?route=checkout/checkout';            }        },        error: function(xhr, ajaxOptions, thrownError) {            alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);        }    });});--></script><script>	function bypass_method_radio(id){		//alert(id);		if(id == 'use_cim_payment_account'){			$('#create_new_credit_card, #create_new_credit_card_aim').prop('checked', false);			$('#cim_payment_option2').slideUp();			$('#cim_payment_option3').slideUp();			$('#payment_billing_address').slideUp();			$('#aim_payment_option1').slideUp();		}else if(id == 'create_new_credit_card'){			$('#use_cim_payment_account, #create_new_credit_card_aim').prop('checked', false);			$('#cim_payment_option3').slideUp();			$('#cim_payment_option2').slideDown();			$('#payment_billing_address').slideDown();			$('#aim_payment_option1').slideUp();		}else if(id == 'create_new_credit_card_aim'){			$('#use_cim_payment_account, #create_new_credit_card').prop('checked', false);			$('#cim_payment_option3').slideUp();			$('#cim_payment_option2').slideUp();			$('#payment_billing_address').slideUp();			$('#aim_payment_option1').slideDown();		}		}</script><?php 	$locationSet = false;	if(isset($_SESSION['locationId']) && !empty($_SESSION['locationId'])){		$locationSet = true;		}		$step_back_url_text	= false;	$step_back_url	= false;	if(isset($breadcrumbs) && !empty($breadcrumbs)){		// $step_back_url_text	= $breadcrumbs[1]['text'];		// $step_back_url 	= $breadcrumbs[1]['href'].'&step_back='.$step_back_url_text;		$step_back_url_text	= 'categories';		$step_back_url 	= $breadcrumbs[0]['href'].'&step_back='.$step_back_url_text;	}?><script><!--	var locationSet 		= '<?php echo $locationSet; ?>';	var step_back_url_text	= '<?php echo ucfirst($step_back_url_text); ?>';	var step_back_url		= '<?php echo $step_back_url; ?>';		step_back_url		= step_back_url.replace(/&amp;/g, '&');	if(locationSet && step_back_url){		$('#step_back_menu').attr('href', step_back_url).html('<i class="fa fa-angle-left"></i> '+step_back_url_text).show();	}	//-->	</script>  </div><!-- id="map" used for google maps api to verify address in fence or not Do not remove --><div id="map" style="display:none;"></div>				<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAMjFn87e61BdBOmSnG7QiUyktFCd4y9f4&libraries=places&callback=initAutocomplete"        async defer></script><script type="text/javascript"><!--// Sort the custom fields$('#account .form-group[data-sort]').detach().each(function() {	if ($(this).attr('data-sort') >= 0 && $(this).attr('data-sort') <= $('#account .form-group').length) {		$('#account .form-group').eq($(this).attr('data-sort')).before(this);	}	if ($(this).attr('data-sort') > $('#account .form-group').length) {		$('#account .form-group:last').after(this);	}	if ($(this).attr('data-sort') < -$('#account .form-group').length) {		$('#account .form-group:first').before(this);	}});	$('#applyRewardButton').click( function() {		// console.log(  );		var value = $('Input[name="applyRewardInput"]').val();				if(value >= 0) {			$.ajax({				url: '<?php echo BASE; ?>index.php?route=rewardpoints/index/applyPoints',				type: 'post',				data: {points: value},				beforeSend: function() {					$('.rewardPointsMsg').html( '' );				},				success: function(json) {					if(json.success) {						$.ajax({						  url: '<?php echo BASE; ?>index.php?route=checkout/checkout/loadOrderSummary',						  success: function(orderData) {							$('#custom-checkout-form_part_2').html(orderData);							$('.rewardPointsMsg').html( json.msg );							$('#loyalty_points').html( json.points_available );						  }						});						// console.log( json );					} else {						$('.rewardPointsMsg').html( json.error );					}				},			});		}	});$('#address .form-group[data-sort]').detach().each(function() {	if ($(this).attr('data-sort') >= 0 && $(this).attr('data-sort') <= $('#address .form-group').length) {		$('#address .form-group').eq($(this).attr('data-sort')).before(this);	}	if ($(this).attr('data-sort') > $('#address .form-group').length) {		$('#address .form-group:last').after(this);	}	if ($(this).attr('data-sort') < -$('#address .form-group').length) {		$('#address .form-group:first').before(this);	}});$('#checkout-registration-panel input[name=\'customer_group_id\']').on('change', function() {	$.ajax({		url: '<?php echo BASE; ?>index.php?route=checkout/checkout/customfield&customer_group_id=' + this.value,		dataType: 'json',		success: function(json) {			$('#checkout-registration-panel .custom-field').hide();			$('#checkout-registration-panel .custom-field').removeClass('required');			for (i = 0; i < json.length; i++) {				custom_field = json[i];				$('#payment-custom-field' + custom_field['custom_field_id']).show();				if (custom_field['required']) {					$('#payment-custom-field' + custom_field['custom_field_id']).addClass('required');				}			}		},		error: function(xhr, ajaxOptions, thrownError) {			alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);		}	});});$('#checkout-registration-panel input[name=\'customer_group_id\']:checked').trigger('change');//--></script><script type="text/javascript"><!--/* $('#checkout-registration-panel button[id^=\'button-payment-custom-field\']').on('click', function() {	var node = this;alert();	$('#form-upload').remove();	$('body').prepend('<form enctype="multipart/form-data" id="form-upload" style="display: none;"><input type="file" name="file" /></form>');	$('#form-upload input[name=\'file\']').trigger('click');	if (typeof timer != 'undefined') {    	clearInterval(timer);	}	timer = setInterval(function() {		if ($('#form-upload input[name=\'file\']').val() != '') {			clearInterval(timer);			$.ajax({				url: '<?php echo BASE; ?>index.php?route=tool/upload',				type: 'post',				dataType: 'json',				data: new FormData($('#form-upload')[0]),				cache: false,				contentType: false,				processData: false,				beforeSend: function() {					$(node).button('loading');				},				complete: function() {					$(node).button('reset');				},				success: function(json) {					$('.text-danger').remove();					if (json['error']) {						$(node).parent().find('input[name^=\'custom_field\']').after('<div class="text-danger">' + json['error'] + '</div>');					}					if (json['success']) {						alert(json['success']);						$(node).parent().find('input[name^=\'custom_field\']').attr('value', json['code']);					}				},				error: function(xhr, ajaxOptions, thrownError) {					alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);				}			});		}	}, 500);}); *///--></script><script type="text/javascript"><!--$('.date').datetimepicker({	pickTime: false});$('.time').datetimepicker({	pickDate: false});$('.datetime').datetimepicker({	pickDate: true,	pickTime: true});//--></script><script type="text/javascript"><!--$('#checkout-registration-panel select[name=\'country_id\']').on('change', function() {	$.ajax({		url: '<?php echo BASE; ?>index.php?route=checkout/checkout/country&country_id=' + this.value,		dataType: 'json',		beforeSend: function() {			$('#checkout-registration-panel select[name=\'country_id\']').after(' <i class="fa fa-circle-o-notch fa-spin"></i>');		},		complete: function() {			$('.fa-spin').remove();		},		success: function(json) {			if (json['postcode_required'] == '1') {				$('#checkout-registration-panel input[name=\'postcode\']').parent().parent().addClass('required');			} else {				$('#checkout-registration-panel input[name=\'postcode\']').parent().parent().removeClass('required');			}			html = '<option value=""><?php //echo $text_select; ?></option>';			if (json['zone'] && json['zone'] != '') {				for (i = 0; i < json['zone'].length; i++) {					html += '<option value="' + json['zone'][i]['zone_id'] + '"';					if (json['zone'][i]['zone_id'] == '<?php //echo $zone_id; ?>') {						html += ' selected="selected"';					}					html += '>' + json['zone'][i]['name'] + '</option>';				}			} else {				html += '<option value="0" selected="selected"><?php //echo $text_none; ?></option>';			}			$('#checkout-registration-panel select[name=\'zone_id\']').html(html);		},		error: function(xhr, ajaxOptions, thrownError) {			alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);		}	});});//$('#checkout-registration-panel select[name=\'country_id\']').trigger('change');//--></script><script type="text/javascript"><!--var methodChosenId = '<?php echo $_SESSION['MethodChosenId']?>';if(methodChosenId == 'method_chosen_delivery'){	showSelectedMethodSection('showDeliverySection','0');	$('#showDeliverySection').addClass('shop_btn');}else{	showSelectedMethodSection('showPickupSection','0');	$('#showPickupSection div').addClass('shop_btn');}	function showSelectedMethodSection(id,reload_page){	if(id == 'showPickupSection'){		// $('#showDeliverySection div').removeClass('highlight');		$('#showDeliverySection').removeClass('shop_btn');		$('#delivery_address_section').hide();		// $('#showPickupSection div').addClass('highlight');		$('#showPickupSection div').addClass('shop_btn');		$('#pickup_section').show();				$.ajax({			url: '<?php echo BASE; ?>index.php?route=checkout/checkout/updateMethodChosenId',			type: 'post',			data: { method: id },			beforeSend: function() {				// $('#button-register').button('loading');			},			complete: function() {				// $('#button-register').button('reset');			},			success: function() {				$('#pickup_section').show();				if(reload_page == '1') location.reload();			},			error: function(xhr, ajaxOptions, thrownError) {				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);			}		});			}else if(id == 'showDeliverySection'){		$('#showPickupSection').removeClass('highlight');		$('#showPickupSection').removeClass('shop_btn');		$('#pickup_section').hide();		$('#showDeliverySection').addClass('highlight');		$('#showDeliverySection').addClass('shop_btn');						$.ajax({			url: '<?php echo BASE; ?>index.php?route=checkout/checkout/updateMethodChosenId',			type: 'post',			data: { method: id },			beforeSend: function() {				// $('#button-register').button('loading');			},			complete: function() {				// $('#button-register').button('reset');			},			success: function() {				$('#delivery_address_section').show();				if(reload_page == '1') location.reload();			},			error: function(xhr, ajaxOptions, thrownError) {				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);			}		});					}		}//ShowTimings Modalfunction showTimings(){		$.ajax({        url: '<?php echo BASE; ?>index.php?route=common/home/get_location_timings_modal',        dataType: 'html',        success: function(html) {						//var parsedhtml = $.parseHTML( html );						bootbox.dialog({			  //title: "That html",			  message: html,			  buttons: {                    success: {                        label: "Ok",                        className: "btn-success"                    }                }						});						/*           $('#collapse-location-option .panel-body').html(html);			$('#collapse-location-option').parent().find('.panel-heading .panel-title').html('<a href="#collapse-location-option" data-toggle="collapse" data-parent="#accordion" class="accordion-toggle"><?php //echo $text_checkout_option; ?>Choose Location <i class="fa fa-caret-down"></i></a>');						$('#order_pickup_unavailable').attr('id', 'order_pickup');			$('#order_delivery_unavailable').attr('id', 'order_delivery');						$('a[href=\'#collapse-location-option\']').trigger('click');			*/        },        error: function(xhr, ajaxOptions, thrownError) {            alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);        }    });	//alert('This will be timings modal');	return;}	//--></script><script type="text/javascript"><!--function addTip(tipAmt){	// alert('tip');	var tipPercent = parseInt(tipAmt)/100;		var subTotalAmt = $('#sub_total').attr('data-amount');	var subTotal = 	subTotalAmt.replace('$', '' );	// alert('tipdddd');	// console.log('tipPercent '+tipPercent);	 // console.log('subTotalAmt '+subTotalAmt);	 // console.log('subTotal '+subTotal);			var totalTipAmt = subTotal * tipPercent;	if(parseFloat(totalTipAmt) != 0){		totalTipAmt = totalTipAmt.toFixed(2);		$('#tip').val(totalTipAmt);		addTipToSession(totalTipAmt);			}else{		$('#tip').val('0.00');	}		}	$(document).delegate('#tip', 'change', function() {		var tipVal = parseFloat(this.value);	tipVal = tipVal.toFixed(2);	if(tipVal >= 0){		$('#tip').val(tipVal);		addTipToSession(tipVal);	}else{		$('#tip').val('0.00');		}	});	function addTipToSession(totalTipAmt){	$.ajax({		url: '<?php echo BASE; ?>index.php?route=checkout/checkout/addTipToSession',		type: 'post',		data: { tip: totalTipAmt },		dataType: 'json',		beforeSend: function() {					},		complete: function() {				},		success: function(json) {			if (json['success']) {				console.log('success');				loadOrderSummary();			} else {				console.log('Fail: Tip was not added to session!');			}					},		error: function(xhr, ajaxOptions, thrownError) {			alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);		}	});	}function loadOrderSummary(){	$.ajax({			url: '<?php echo BASE; ?>index.php?route=checkout/checkout/loadOrderSummary',			dataType: 'html',			beforeSend: function() {				//$('#button-account').button('loading');			},			complete: function() {				//$('#button-account').button('reset');			},			success: function(html) {				$('#custom-checkout-form_part_2').html(html);			},			error: function(xhr, ajaxOptions, thrownError) {				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);			}		});	}		//--></script><script type="text/javascript"><!--/**	Confirm Button function for method chosen delivery*	Function to post user details via ajax and save in Session*/function confirm_delivery_address(){		// var data	=	{					// 'input_payment_firstname':$('#delivery_firstname').val(),					// 'input_payment_lastname':$('#delivery_lastname').val(),					// 'input_payment_email':$('#delivery_email').val(),					// 'input_payment_telephone':$('#delivery_telephone').val(),					// 'input_payment_fax':$('#delivery_fax').val(),					// 'input_payment_company':$('#delivery_company').val(),					// 'input_payment_address_1':$('#delivery_address_1').val(),					// 'input_payment_address_2':$('#delivery_address_2').val(),					// 'input_payment_postcode':$('#delivery_postcode').val(),					// 'input_payment_city':$('#delivery_city').val(),					// 'input_payment_country':$('#delivery_country_id').val(),					// 'input_payment_zone':$('#delivery_zone_id').val()					// };		// var countryName = $('#delivery_country_id').find('option:selected').attr('id');	// var stateName = $('#delivery_zone_id').find('option:selected').attr('id');		//var fullAddress = $('#delivery_address_1').val()+','+$('#delivery_address_2').val()+','+$('#delivery_city').val()+','+stateName+','+countryName;					var fullAddress = '';	if ( $( "#full_delivery_address" ).length ) {		fullAddress = $('#full_delivery_address').val();	}				//var data = fullAddress;	//alert(fullAddress);		if(fullAddress == '' || typeof(fullAddress) == 'undefined'){		bootbox.alert("<div class='custom_bootbox_error'>Delivery Address Required!</div> ", function() {		});		return false;	}else{					$.ajax({			url: '<?php echo BASE; ?>index.php?route=common/home/getFenceCoordinates',			dataType: 'json',			success: function(json) {				//$('#geocodeReturn').val('');				var location_coordinates	=	$.parseJSON(json['locationCoordinates']);				var initVal = initMap(location_coordinates, fullAddress);			},			error: function(xhr, ajaxOptions, thrownError) {				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);			}		});	}	}/* * Functions to verify if the address is in the location range for delivery *//**********************************************************************************/function initMap(blueCoords, address) {	var blueCoords1 = blueCoords;	var map = new google.maps.Map(document.getElementById('map'), {									center: blueCoords1[0],zoom: 5	});		if(blueCoords1 == 'undefined' || blueCoords1 == null){		//setting up the initial coordinates for polygon1		var blueCoords1 = [			{lat: 44.5452, lng: -78.19},			{lat: 44.29213722690972, lng: -77.99989697265624},			{lat: 44.46586801436672, lng: -77.51541967773437},			{lat: 44.697195234376494, lng: -77.67692858886721}		];	}		// Construct a draggable blue Polygon1 with geodesic set to false.	var bermudaPolygon1 = new google.maps.Polygon({		map: map,		paths: blueCoords1,		strokeColor: '#0000FF',		strokeOpacity: 0.8,		strokeWeight: 2,		fillColor: '#0000FF',		fillOpacity: 0.35,		draggable: true,		editable: true,		geodesic: false	});							bermudaPolygon1.setMap(map);	bermudaPolygon1.addListener('mouseup', addLatLng1);			var geocoder = new google.maps.Geocoder();		// document.getElementById('submit').addEventListener('click', function() {	var geocodeVal = geocodeAddress(geocoder, map, bermudaPolygon1, address);		//console.log(geocodeVal);	//return;		// });						}//Handles click events on a map, and adds a new point to the Polyline.function addLatLng1(event) {						var vertices = this.getPath();	//console.log(vertices);	  	var contentString = event.latLng.lat() + ',' + event.latLng.lng() ;  	// Iterate over the vertices.	for (var i =0; i < vertices.getLength(); i++) {		var xy = vertices.getAt(i);			contentString += ':' + xy.lat() + ',' +xy.lng();	}		//to display the values in log	//console.log(contentString); 					}  function geocodeAddress(geocoder, resultsMap, bermudaPolygon1, locationAddress) {  var address = locationAddress;    var data	=	{					'input_payment_firstname'		: '',					'input_payment_lastname'		: '',					'input_payment_email'			: '',					'input_payment_telephone'		: '',					'input_payment_fax'				: '',					'input_payment_company'			: '',					'input_payment_address_1'		: $('#street_number').val(),					'input_payment_address_2'		: $('#route').val(),					'input_payment_postcode'		: $('#postal_code').val(),					'input_payment_city'			: $('#locality').val(),					'input_payment_country'			: $('#country').val(),					'input_payment_zone_code'		: $('#administrative_area_level_1').val(),					'input_payment_zone'			: '',					'full_delivery_address' 		: $('#full_delivery_address').val(),					'street_number'					: $('#street_number').val(),					'route'							: $('#route').val(),					'postal_code'					: $('#postal_code').val(),					'locality'						: $('#locality').val(),					'country'						: $('#country').val(),					'administrative_area_level_1'	: $('#administrative_area_level_1').val()				};          var geoFunc = geocoder.geocode({'address': address}, function(results, status) {	 if (status === google.maps.GeocoderStatus.OK) {		 var contains1 = google.maps.geometry.poly.containsLocation(results[0].geometry.location , bermudaPolygon1);		var street_number	=	$('#street_number').val();			//console.log(street_number);		// if(street_number == '' || typeof(street_number) == 'undefined'){						// bootbox.alert("<div class='custom_bootbox_error'>Sorry this location doesn't deliver to this address. Please try again.</div>", function() {			// });			// return false;					// }		 if(contains1){			// $('#geocodeReturn').val(1);			$.ajax({					  type: 'POST',					  url: '<?php echo BASE; ?>index.php?route=common/home/add_delivery_address_2_session',					  data: data,					  beforeSend: function() {								  								},					  success: function(response) {								   success_function(response);								   //console.log(response);								},					  error: function(response) {								   //success_function(response);								   //console.log(response);								},					  dataType: 'json'					});		 }else{			// $('#geocodeReturn').val(2);			bootbox.alert("<div class='custom_bootbox_error'>Sorry! We do not deliver to this address.</div>", function() {			});			return false;		 }  	 } else {		//alert('Geocode was not successful for the following reason: ' + status);	 }  });} /**********************************************************************************/function NumAndTwoDecimals(e , field) {    var val = field.value;    var re = /^([0-9]+[\]?[0-9]?[0-9]?|[0-9]+)$/g;    var re1 = /^([0-9]+[\]?[0-9]?[0-9]?|[0-9]+)/g;    if (re.test(val)) {        //do something here    } else {        val = re1.exec(val);        if (val) {            field.value = val[0];        } else {            field.value = "";        }    }}function success_function(response){	if(response == 1){		// $('#confirm_view_menu').trigger('click');		bootbox.alert("Success! Your address is within our delivery range.", function() {			//location.reload();		});		console.log('Hurrah');	}else{		bootbox.alert("Oh-Oh!, something went wrong, please try again.", function() {			location.reload();		});		console.log('Alas');			//location.reload();	}}//https://developers.google.com/maps/documentation/javascript/examples/places-autocomplete-addressformvar placeSearch, autocomplete;var componentForm = {  street_number: 'short_name',  //route: 'long_name',  //locality: 'long_name',  administrative_area_level_1: 'short_name',  country: 'long_name',  postal_code: 'short_name'};//auto complete address formfunction initAutocomplete() {		if ( $( "#full_delivery_address" ).length ) {		var fullAddress = $('#full_delivery_address').val();		autocomplete = new google.maps.places.Autocomplete(		  /** @type {!HTMLInputElement} */		  (document.getElementById('full_delivery_address')),		  {types: ['geocode']});	  		//console.log(autocomplete);	  // When the user selects an address from the dropdown, populate the address	  // fields in the form.	  autocomplete.addListener('place_changed', fillInAddress);	}  }//KKK =0;// [START region_fillform]function fillInAddress() {//KKK=KKK+1; //alert(KKK);	  // Get the place details from the autocomplete object.  var place = autocomplete.getPlace();  //alert(place);	  for (var component in componentForm) {	  console.log(component);    document.getElementById(component).value = '';    document.getElementById(component).disabled = false;  }  // Get each component of the address from the place details  // and fill the corresponding field on the form.  for (var i = 0; i < place.address_components.length; i++) {    var addressType = place.address_components[i].types[0];    if (componentForm[addressType]) {      var val = place.address_components[i][componentForm[addressType]];      //alert(val);	  document.getElementById(addressType).value = val;    }  }}//--></script><?php echo $footer; ?>